in the data.json file is this content;

data.json

[
  {
    "createdAt": "04-01-2022",
    "name": "untitled-document.md",
    "content": ""
  },
  {
    "createdAt": "04-01-2022",
    "name": "welcome.md",
    "content": "# Welcome to Markdown\n\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents.\n\n## How to use this?\n\n1. Write markdown in the markdown editor window\n2. See the rendered markdown in the preview window\n\n### Features\n\n- Create headings, paragraphs, links, blockquotes, inline-code, code blocks, and lists\n- Name and save the document to access again later\n- Choose between Light or Dark mode depending on your preference\n\n> This is an example of a blockquote. If you would like to learn more about markdown syntax, you can visit this [markdown cheatsheet](https://www.markdownguide.org/cheat-sheet/).\n\n#### Headings\n\nTo create a heading, add the hash sign (#) before the heading. The number of number signs you use should correspond to the heading level. You'll see in this guide that we've used all six heading levels (not necessarily in the correct way you should use headings!) to illustrate how they should look.\n\n##### Lists\n\nYou can see examples of ordered and unordered lists above.\n\n###### Code Blocks\n\nThis markdown editor allows for inline-code snippets, like this: `<p>I'm inline</p>`. It also allows for larger code blocks like this:\n\n```\n<main>\n  <h1>This is a larger code block</h1>\n</main>\n```"
  }
]



replace the usestate("# Bentum) in;

App.jsx
import { useState } from "react";
import Preview from "./components/Preview";
import Editor from "./components/editor";
import { Navbar } from "./components/navbar";


function App() {
    const [markdown, setMarkdown]  = useState("# Bentum");
    return(
        <div>
            <Navbar/>
            
           <main className="w-full h-screen grid grid-cols-1 sm:grid-cols-2 bg-gray-800">
             <Editor markdown={markdown} setMarkdown={setMarkdown}/>
             <Preview markdown={markdown}/>
           </main>
        </div>
        
    )}

export default App;

with  the value of "content" in the data.json file.

and replace  useState("welcome.md"); in ;

navbar.jsx

import { useState } from "react";

export const Navbar = () => {
  const [documentName, setDocumentName] = useState("welcome.md");
  const [isEditing, setIsEditing] = useState(false);
  const [tempName, setTempName] = useState(documentName);
  const [isSidebarOpen, setIsSidebarOpen] = useState(false); // State to manage sidebar

  const handleInputChange = (e) => {
    setTempName(e.target.value);
  };

  const handleSave = () => {
    if (!tempName.endsWith(".md")) {
      const newName = tempName + ".md";
      setDocumentName(newName);
      setIsEditing(false);
    } else {
      setDocumentName(tempName);
      setIsEditing(false);
    }
  };

  const handleOpenSidebar = () => {
    setIsSidebarOpen(true);
  };

  const handleCloseSidebar = () => {
    setIsSidebarOpen(false);
  };

  return (
    <>
      <nav className="bg-gray-800 flex items-center justify-between p-2">
        <div className="flex items-center">
          <div className="flex justify-center font-semibold  text-white">
            <button id="openBtn" onClick={handleOpenSidebar}>
              <img
                src="/src/assets/icon-menu.svg"
                className="mr-3 hover:bg-customRed py-5 px-4 bg-customblack3"
                alt="Menu Icon"
              />
            </button>
            <div className="flex justify-center mt-4" > MARKDOWN</div>
           
          </div>
          <span className="border-l border-white mx-4 h-10" />

          <div className="flex flex-row justify-center ml-5">
            <img
              src="/src/assets/icon-document.svg"
              alt="Document Icon"
              className="h-8 w-5 my-auto"
            />
            <div className="text-gray-400 text-lg font-semibold items-center ml-5 flex-col justify-center">
              <p>Document Name</p>
              {isEditing ? (
                <div className="flex items-center">
                  <input
                    type="text"
                    value={tempName}
                    onChange={handleInputChange}
                    onBlur={handleSave}
                    autoFocus
                    className=" bg-transparent text-white focus:outline-none focus:border-b border-white caret-red-500 cursor-pointer"
                  />
                </div>
              ) : (
                <p
                  className="text-white cursor-pointer"
                  onClick={() => setIsEditing(true)}
                >
                  {documentName}
                </p>
              )}
            </div>
          </div>
        </div>
        <div className="flex flex-row items-center">
            <button id="deleteDocBtn" className="group">
              <svg
    width="18"
    height="20"
    xmlns="http://www.w3.org/2000/svg"
    className="fill-current text-gray-500 group-hover:text-customRed"
  >
    <path d="M7 16a1 1 0 0 0 1-1V9a1 1 0 1 0-2 0v6a1 1 0 0 0 1 1ZM17 4h-4V3a3 3 0 0 0-3-3H8a3 3 0 0 0-3 3v1H1a1 1 0 1 0 0 2h1v11a3 3 0 0 0 3 3h8a3 3 0 0 0 3-3V6h1a1 1 0 0 0 0-2ZM7 3a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v1H7V3Zm7 14a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V6h10v11Zm-3-1a1 1 0 0 0 1-1V9a1 1 0 0 0-2 0v6a1 1 0 0 0 1 1Z" />
              </svg>
            </button>



          <button
            id="saveDocBtn"
            className="ml-2 items-center text-white flex flex-row bg-customRed p-2 rounded-sm mr-4 hover:bg-customredhover"
          >
            <img
              src="/src/assets/icon-save.svg"
              className="mr-2"
              alt="Save Icon"
            />
            Save Changes
          </button>
        </div>
      </nav>
      
      <div className={`fixed inset-0 z-50 transition-transform transform ${isSidebarOpen ? "translate-x-0" : "-translate-x-full"} bg-gray-900 bg-opacity-75`}>
        <div className="w-64 bg-gray-800 h-full p-4">
          <div className="flex justify-end">
            <button id="closeBtn" onClick={handleCloseSidebar}>
              <img
                src="/src/assets/icon-close.svg"
                className="flex justify-between"
                alt="Close Icon"
              />
            </button>
          </div>
              <div className="text-gray-500 text-lg font-roboto font-bold ml-4">My Documents</div>
              <button className="p-2 bg-customRed rounded-sm  m-5 mt-7 font-semibold w-48 justify-center text-white font-5">+ New Documents</button>
        </div>
      </div>

      <script src="script.js"></script>
    </>
  );
};


with the value of "name" in the data.json file

Preview.jsx

import { marked } from 'marked';

/* eslint-disable no-unused-vars */
// eslint-disable-next-line react/prop-types
function Preview({ markdown }) {
  const parsed = marked(markdown);
  
  return (
    <div>
      <div className="w-full bg-gray-900 p-3 text-gray-400 uppercase tracking-wider">
        Preview
      </div>
      <div className='p-6 prose prose-invert' dangerouslySetInnerHTML={{ __html: parsed }} />
    </div>
  );
}

export default Preview;

if the save changes  in navbar.jsx is clicked, it should update the value of  "content" in the data.json file. with the corresponding name.



when the name in the useState in the navbar is changed, update it in the data.json file

when the + new document button is clicked, create a new data in the data.json with its date, name and content. add it to the top of the list in the side bar. show all the documents in the data.json on the side bar with format date and name. 
on creating the new document assign it name "untitled-document.md" if name already exist, add number (1,2,3) an so on beside the name.

if the delete button in the side bar is clicked, remove it from the data.json and the list on the sidebar, and update the name on the side bar with the next item in data.json and change the value in the useState of the preview with the next item im data.json